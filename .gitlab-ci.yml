# first, install Cypress, then run all tests
stages:
  - build
  - test
  - pages

# to cache both npm modules and Cypress binary we use environment variables
# to point at the folders we can list as paths in "cache" job settings
variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
  SLACK_WEBHOOK: "https://hooks.slack.com/services/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"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - cache/Cypress
    - node_modules

# this job installs NPM dependencies and Cypress
install:
  image: cypress/base:10
  stage: build
  script:
    - npm ci
    # check Cypress binary path and cached versions
    # useful to make sure we are not carrying around old versions
    - npx cypress cache path
    - npx cypress cache list
    - npm run cy:verify
    - npm run cy:info

test:
  image: cypress/base:10
  stage: test
  script:
    # Run cypress tests
    - npx cypress run --reporter mochawesome  --reporter-options reportDir=mochawesome-report,overwrite=false,html=false,json=true
  artifacts:
    expire_in: 30 days
    when: always
    paths:
      - mochawesome-report
      - cypress/screenshots

pages:
  image: cypress/base:10
  stage: pages
  script:
    # Generate Mochawesome report
    - npx mochawesome-merge "mochawesome-report/*.json" > mochawesome.json
    - npx marge mochawesome.json
    # Rename mochawesome-report folder to public
    - mv mochawesome-report public
  when: always
  only:
    - master
  artifacts:
    expire_in: 30 days
    when: always
    paths:
      - public
      - mochawesome-report
      - cypress/screenshots